cc_library(
    name = "opencv_lib",
    srcs = select({
        "@deepmap//:darwin": [
            "mac/lib/libopencv_calib3d.a",
            "mac/lib/libopencv_features2d.a",
            "mac/lib/libopencv_xfeatures2d.a",
            "mac/lib/libopencv_flann.a",
            "mac/lib/libopencv_highgui.a",
            "mac/lib/libopencv_imgcodecs.a",
            "mac/lib/libopencv_ml.a",
            "mac/lib/libopencv_objdetect.a",
            "mac/lib/libopencv_photo.a",
            "mac/lib/libopencv_shape.a",
            "mac/lib/libopencv_stitching.a",
            "mac/lib/libopencv_superres.a",
            "mac/lib/libopencv_video.a",
            "mac/lib/libopencv_videoio.a",
            "mac/lib/libopencv_videostab.a",
            "mac/lib/libopencv_imgproc.a",
            "mac/lib/libopencv_core.a",
            "mac/3rdparty/lib/liblibjasper.a",
            "mac/3rdparty/lib/liblibjpeg.a",
            "mac/3rdparty/lib/liblibpng.a",
            "mac/3rdparty/lib/liblibtiff.a",],
        "//conditions:default": [
            "linux/lib/libopencv_calib3d.a",
            "linux/lib/libopencv_features2d.a",
            "linux/lib/libopencv_xfeatures2d.a",
            "linux/lib/libopencv_viz.a",
            "linux/lib/libopencv_flann.a",
            "linux/lib/libopencv_highgui.a",
            "linux/lib/libopencv_imgcodecs.a",
            "linux/lib/libopencv_ml.a",
            "linux/lib/libopencv_objdetect.a",
            "linux/lib/libopencv_photo.a",
            "linux/lib/libopencv_shape.a",
            "linux/lib/libopencv_stitching.a",
            "linux/lib/libopencv_superres.a",
            "linux/lib/libopencv_video.a",
            "linux/lib/libopencv_videoio.a",
            "linux/lib/libopencv_videostab.a",
            "linux/lib/libopencv_imgproc.a",
            "linux/lib/libopencv_core.a",
            "linux/3rdparty/lib/liblibjasper.a",
            "linux/3rdparty/lib/liblibjpeg.a",
            "linux/3rdparty/lib/liblibpng.a",
            "linux/3rdparty/lib/liblibtiff.a",],
    }),
    hdrs = select({
        "@deepmap//:darwin": glob(["mac/**/*.hpp", "mac/**/*.h"]),
        "//conditions:default": glob(["linux/**/*.hpp", "linux/**/*.h"])
    }),
    includes = select({
        "@deepmap//:darwin": ["mac/include"],
        "//conditions:default": ["linux/include"]
    }),
    visibility = ["//visibility:public"],
    linkstatic = 1,
    linkopts = ["-lstdc++", "-ldl", "-lm", "-pthread", "-lz"],
)
